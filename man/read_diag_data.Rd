% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_diag_data.R
\name{read_diag_data}
\alias{read_diag_data}
\title{Read and validate the structure of diagnostic data}
\usage{
read_diag_data(
  file_path,
  id_col = "id",
  date_col = "date",
  code_col = "code",
  log_path = NULL,
  remove_extra = FALSE,
  ...
)
}
\arguments{
\item{file_path}{A character string. File path to the diagnostic data to read. Supports CSV, RDS, RDA and .SAV files.}

\item{id_col}{A character string. Name of ID column in data set, default is "id".}

\item{date_col}{A character string. Name of date column in data set, default is "date".}

\item{code_col}{A character string. Name of diagnostic codes column in data set, default is "code".}

\item{log_path}{A character string. Path to the log file to append function logs. Default is \code{NULL}.
\itemize{
\item If \code{NULL}, a new directory \verb{/log} and file is created in the current working directory.
}}

\item{remove_extra}{Logical. If \code{TRUE}, removes any extra columns beside id, date and diagnostic code. Default is \code{FALSE}.}

\item{...}{Additional arguments passed to methods or underlying functions.}
}
\value{
A data frame with the validated minimum requirements for diagnostic data
}
\description{
\code{read_diag_data()} validates the general structure and minimum column requirements for diagnostic data.
The input data sets must be CSV, RDS, RDA or .SAV files.
}
\examples{
# Read and validate CSV file for diagnostic individual level data.
log_file <- tempfile()
cat("Example log file", file = log_file)

diag_csv <- system.file("extdata", "diag_data.csv", package = "regtools")

diag_data_validated <- read_diag_data(diag_csv,
  id_col = "id",
  date_col = "diag_year",
  log_path = log_file)

}
